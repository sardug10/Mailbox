{"version":3,"sources":["components/EmailDetail.jsx","components/EmailList.jsx","components/Email.jsx","components/SearchResults.jsx","components/Header.jsx","components/SidebarTags.jsx","components/Sidebar.jsx","features/emailConstants.js","screens/HomeScreen.jsx","features/emailActions.js","App.js","app/store.js","features/emailReducer.js","serviceWorker.js","index.js"],"names":["EmailDetail","email","data","userId","tag","subject","body","history","useHistory","className","IconButton","onClick","push","EmailList","handleOnClick","id","fontSize","style","marginRight","Email","emails","params","useParams","useState","emailsData","setEmailsData","setEmail","emailId","useEffect","forEach","el","find","handleClickOnEmail","map","SearchResults","to","Header","searchInput","setSearchInput","filteredEmails","setFilteredEmails","window","addEventListener","e","JSON","stringify","target","includes","showSearchResults","keyword","value","string","filter","o","Object","keys","some","k","toString","toLowerCase","console","log","handleSearchClick","type","placeholder","onChange","length","SidebarTags","Icon","title","active","path","Sidebar","match","tags","name","icon","InboxIcon","InsertDriveFileIcon","ErrorIcon","DeleteIcon","EmailIcon","tagsArray","setTagsArray","newTagsArray","prevPath","handleTagSelect","EMAIL_LIST_REQUEST","EMAIL_LIST_SUCCESS","EMAIL_LIST_FAIL","HomeScreen","dispatch","useDispatch","emailList","useSelector","state","loading","error","a","axios","method","url","payload","response","message","CircularProgress","Alert","severity","App","component","exact","from","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f3c3c33.chunk.js","sourcesContent":["import React from 'react'\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { IconButton } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EmailDetail = ({data:email}) => {\r\n\r\n    const {userId, tag, subject, body} = email\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className='emailDetail'>\r\n            <div className=\"emailDetail__top\">\r\n                <IconButton onClick={()=>history.push(`/${tag}`)} >\r\n                    <ArrowBackIosIcon/>\r\n                </IconButton>\r\n                <span className=\"emailDetail__subject\">{subject}</span>\r\n                <LabelIcon/>\r\n                {tag}\r\n            </div>\r\n            <div className=\"emailDetail__middle\">\r\n                <AccountCircleIcon/>\r\n                <span className=\"emailDetail__sender\">User {userId}, to me</span>\r\n            </div>\r\n            <p className=\"emailDetail__bottom\">\r\n                {body}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailDetail\r\n","import React from 'react'\r\nimport LabelIcon from '@material-ui/icons/Label';\r\n\r\nconst EmailList = ({email, handleOnClick}) => {\r\n\r\n    return (\r\n                <div className='emailList' onClick={()=>handleOnClick(email.id)} >\r\n                    <span className=\"emailList__user\">\r\n                    User {email.userId}\r\n                    </span>\r\n                    <h3 className=\"emailList__tag\">\r\n                        <LabelIcon fontSize='small' style={{marginRight:5}}/>\r\n                        {email.tag}\r\n                    </h3>\r\n                    <div className=\"emailList__message\">\r\n                        <span className=\"emailList__subject\">{email.subject} - </span>\r\n                        <span className=\"emailList__body\">{email.body}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n\r\nexport default EmailList\r\n","import React, {useEffect, useState} from 'react'\r\nimport EmailDetail from './EmailDetail'\r\nimport EmailList from './EmailList'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst Email = ({data:emails}) => {\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const [emailsData, setEmailsData] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n\r\n    const emailId = params.id\r\n\r\n    useEffect(()=>{\r\n        const tag = params.tag\r\n        if(tag === 'all'){\r\n            setEmailsData(emails)\r\n        } else{\r\n            const emailsData = []\r\n            emails.forEach((el)=>{\r\n                if(el.tag === tag){\r\n                    emailsData.push(el)\r\n                }\r\n            })\r\n            setEmailsData(emailsData)\r\n        }\r\n    },[emails, params])\r\n\r\n    useEffect(()=>{\r\n        const emailId = params.id\r\n        const email = emailsData && emailsData.find(el => el.id === emailId*1)\r\n        setEmail(email)\r\n    },[params,email, emailsData])\r\n\r\n    const handleClickOnEmail = (id)=>{\r\n        const email = emails.find(el => el.id === id)\r\n        setEmail(email)\r\n        history.push(`/${params.tag}/mail/${id}`)\r\n    }\r\n\r\n    if(emailId && email){\r\n        return(\r\n            <EmailDetail data={email} />\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"emailList__div\">\r\n                {\r\n                    emailsData && emailsData.map((email)=>(\r\n                        <EmailList key={email.id} email={email} handleOnClick={handleClickOnEmail} />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Email\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst SearchResults = ({email, handleOnClick}) => {\r\n    return (\r\n        <Link className='header__link' to={`/${email.tag}/mail/${email.id}`} onClick={handleOnClick}>\r\n            <p className=\"header__subject\">{email.subject}</p>\r\n            <p className=\"header__body\">{email.body}</p>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default SearchResults\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport SearchResults from './SearchResults';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {IconButton} from '@material-ui/core'\r\n\r\nconst Header = ({emails}) => {\r\n    const params = useParams()\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [emailsData, setEmailsData] = useState(null)\r\n    const [filteredEmails, setFilteredEmails] = useState(null)\r\n   \r\n    useEffect(()=>{\r\n        window.addEventListener('click', function(e){\r\n            const elementClassName = JSON.stringify(e.target.className)\r\n            if(elementClassName.includes('header')){\r\n                return\r\n            } else{\r\n                setSearchInput('')\r\n            }\r\n        })\r\n    })\r\n\r\n    useEffect(()=>{\r\n        const tag = params.tag\r\n        if(tag === 'all'){\r\n            setEmailsData(emails)\r\n        } else{\r\n            const emailsData = []\r\n            emails.forEach((el)=>{\r\n                if(el.tag === tag){\r\n                    emailsData.push(el)\r\n                }\r\n            })\r\n            setEmailsData(emailsData)\r\n        }\r\n    },[emails, params, searchInput])\r\n\r\n    function filterByValue(array, string) {\r\n        return array.filter(o =>\r\n            Object.keys(o).some(k => o[k].toString().toLowerCase().includes(string.toLowerCase())));\r\n    }\r\n\r\n    const showSearchResults = (e)=>{\r\n        const keyword = e.target.value\r\n        setSearchInput(keyword)\r\n        const filteredEmails = filterByValue(emailsData, keyword)\r\n        setFilteredEmails(filteredEmails)\r\n        console.log(filteredEmails)\r\n    }\r\n\r\n    const handleSearchClick = ()=>{\r\n        setSearchInput('')\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon className='header__icons'/>\r\n                </IconButton>\r\n                <MailOutlineOutlinedIcon className='header__icons header__icons--mail' />\r\n                <span className=\"header__text\">Mailbox</span>\r\n            </div>\r\n            <div className=\"header__middle\">\r\n                <IconButton>\r\n                    <SearchIcon className='header__icons'/>\r\n                </IconButton>\r\n                <div className=\"header__middle--secondary\">\r\n                    <input type=\"text\" className=\"header__input\" value={searchInput} placeholder='Search Email' onChange={(e)=>showSearchResults(e)} />\r\n                    <div className={`header__suggestions ${searchInput === '' && 'header__suggestions--hide'}`}>\r\n                        {\r\n                            filteredEmails && filteredEmails.length > 0 \r\n                                ? \r\n                                (\r\n                                    filteredEmails && filteredEmails.map((email)=>(\r\n                                        <SearchResults email={email} key={email.id} handleOnClick={handleSearchClick} />\r\n                                    ))\r\n                                )\r\n                                :\r\n                                (\r\n                                    <p className=\"header__message\">No Matching results</p>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <AccountCircleIcon className='header__icons header__icons--avatar'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst SidebarTags = ({Icon, title, active,path, handleOnClick}) => {\r\n    return (\r\n        <Link to={`/${path}`} className='sidebar__link'>\r\n            <div className={`sidebar__tags ${active && 'sidebar__tags--active'}`} onClick={()=>handleOnClick(title)}>\r\n                <Icon/>\r\n                <h3 className=\"sidebar__text\">{title}</h3>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default SidebarTags\r\n ","import React, {useState, useEffect} from 'react'\r\nimport SidebarTags from './SidebarTags';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nconst Sidebar = ({match, emails}) => {\r\n\r\n    const tags = [\r\n        {\r\n            name:'Inbox',\r\n            icon:InboxIcon,\r\n            active:true,\r\n            path:'inbox'\r\n        },\r\n        {\r\n            name:'Drafts',\r\n            icon:InsertDriveFileIcon,\r\n            active:false,\r\n            path:'draft'\r\n        },\r\n        {\r\n            name:'Spam',\r\n            icon:ErrorIcon,\r\n            active:false,\r\n            path:'spam'\r\n        },\r\n        {\r\n            name:'Trash',\r\n            icon:DeleteIcon,\r\n            active:false,\r\n            path:'trash'\r\n        },\r\n        {\r\n            name:'All Mail',\r\n            icon:EmailIcon,\r\n            active:false,\r\n            path:'all'\r\n        },\r\n    ]\r\n\r\n    const [tagsArray, setTagsArray] = useState(tags)\r\n\r\n    useEffect(()=>{\r\n        const newTagsArray = [...tags]\r\n        const prevPath = match && match.params.tag\r\n        newTagsArray.forEach((tag)=>{\r\n            tag.active = tag.path === prevPath ? true :false\r\n        })\r\n        setTagsArray(newTagsArray)\r\n        // eslint-disable-next-line\r\n    },[match])\r\n\r\n\r\n    const handleTagSelect = (name)=>{\r\n        const newTagsArray = [...tags]\r\n        newTagsArray.forEach((tag)=>{\r\n            tag.active = tag.name === name ? true :false\r\n        })\r\n        setTagsArray(newTagsArray)\r\n    }\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            {\r\n                tagsArray.map((tag)=>(\r\n                    <SidebarTags key={tag.name} Icon={tag.icon} title={tag.name} active={tag.active} path={tag.path} handleOnClick={handleTagSelect}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const EMAIL_LIST_REQUEST = 'EMAIL_LIST_REQUEST'\r\nexport const EMAIL_LIST_SUCCESS = 'EMAIL_LIST_SUCCESS'\r\nexport const EMAIL_LIST_FAIL = 'EMAIL_LIST_FAIL'","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Email from '../components/Email';\r\nimport Header from './../components/Header';\r\nimport Sidebar from './../components/Sidebar';\r\nimport { listEmails } from '../features/emailActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst HomeScreen = ({history, match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const emailList = useSelector((state)=>state.emailList)\r\n    const { loading, emails, error } = emailList\r\n\r\n    useEffect(() => {\r\n        dispatch(listEmails())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Header emails={emails} />\r\n            <div className=\"main\">\r\n                <Sidebar match={match} emails={emails} />\r\n                {loading && <CircularProgress className='loader' />}\r\n                {error && <Alert severity=\"error\">Error: {error}</Alert> }\r\n                <Email match={match} data={emails}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios';\r\nimport {\r\n    EMAIL_LIST_REQUEST,\r\n    EMAIL_LIST_SUCCESS,\r\n    EMAIL_LIST_FAIL\r\n} from './emailConstants';\r\n\r\nexport const listEmails = () => async (\r\n    dispatch\r\n  ) => {\r\n    try {\r\n      dispatch({ type: EMAIL_LIST_REQUEST })\r\n  \r\n      const {data}  = await axios({\r\n          method:'GET',\r\n          url:'https://run.mocky.io/v3/58770279-0738-4578-a1cf-c56a193fce98'\r\n      })\r\n\r\n      dispatch({\r\n        type: EMAIL_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: EMAIL_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n}","import React from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom'\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path='/:tag/mail/:id' component={HomeScreen} />\n        <Route path='/:tag' component={HomeScreen} />\n        <Redirect exact from ='/' to='/inbox' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import thunk from 'redux-thunk'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { emailListReducer } from './../features/emailReducer';\n\nconst reducer = combineReducers({\n  emailList:emailListReducer\n})\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import {\r\n    EMAIL_LIST_REQUEST,\r\n    EMAIL_LIST_SUCCESS,\r\n    EMAIL_LIST_FAIL\r\n} from './emailConstants';\r\n\r\nexport const emailListReducer = (state = { emails: [] }, action) => {\r\n    switch (action.type) {\r\n      case EMAIL_LIST_REQUEST:\r\n        return { loading: true, emails: [] }\r\n      case EMAIL_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          emails: action.payload,\r\n        }\r\n      case EMAIL_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}